<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grpc on Coding茶餐厅</title>
    <link>//razil.cc/categories/grpc/</link>
    <description>Recent content in Grpc on Coding茶餐厅</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 19 Jun 2019 23:01:59 +0800</lastBuildDate>
    
	<atom:link href="//razil.cc/categories/grpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[grpc] Grpc开发小tips</title>
      <link>//razil.cc/post/2019/06/grpc_tips/</link>
      <pubDate>Wed, 19 Jun 2019 23:01:59 +0800</pubDate>
      
      <guid>//razil.cc/post/2019/06/grpc_tips/</guid>
      <description>Grpc开发小tips 总结了一些在日常使用grpc过程中踩的坑。 1.流的context控制 2.传输最大发送和接受数据大小限制 conn, err := grpc.Dial( &amp;quot;127.0.0.1:10000&amp;quot;, grpc.WithInsecure(), grpc.WithDefaultCallOptions( grpc.MaxCallRecvMsgSize(32*1024*1024),</description>
    </item>
    
    <item>
      <title>【go】Grpc-获取请求地址</title>
      <link>//razil.cc/post/2018/09/go-grpc-get-requestaddr/</link>
      <pubDate>Mon, 27 Aug 2018 17:12:01 +0800</pubDate>
      
      <guid>//razil.cc/post/2018/09/go-grpc-get-requestaddr/</guid>
      <description>背景 如同在走HTTP开发，在用grpc做服务时候也会有遇到需要获得请求端地址做统计或计算的需求，现有的api没有能像net/http库封装那</description>
    </item>
    
  </channel>
</rss>