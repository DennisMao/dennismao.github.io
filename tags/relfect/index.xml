<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Relfect on 行者小筑</title>
    <link>/tags/relfect/</link>
    <description>Recent content in Relfect on 行者小筑</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@2017-2018 版权所有.</copyright>
    <lastBuildDate>Thu, 20 Jul 2017 15:03:41 +0800</lastBuildDate>
    <atom:link href="/tags/relfect/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>【Go】反射在Beego/Orm中的应用</title>
      <link>/post/2017/07/reflect-on-beego-orm/</link>
      <pubDate>Thu, 20 Jul 2017 15:03:41 +0800</pubDate>
      
      <guid>/post/2017/07/reflect-on-beego-orm/</guid>
      <description>应用 在Beego Orm中，作者使用了go的反射机制，实现 1、通过数据模型建立数据表
 type DataSheet struct { Name string orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;name&amp;quot; //表名称 Type string orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;type&amp;quot; //周期类型 日/月/季/年 Way string orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;way&amp;quot; //生成方式 Time string orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;time&amp;quot; //创建时间 Creator string orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;creator&amp;quot; //制作人 }
 在调用 orm.RegisterModel(new(DataSheet)) 后会自动生成名为 data_sheet 的数据表 2、通过模型中的tag &amp;gt; orm:&amp;quot;auto;pk&amp;quot; &amp;gt; orm:&amp;quot;rel(m2m)&amp;quot;
自动设置字段属性和表之间关系
完整代码 package main import ( &amp;quot;errors&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;reflect&amp;quot; ) type DataSheet struct { Name string `orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;name&amp;quot;` //表名称 Type string `orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;type&amp;quot;` //周期类型 日/月/季/年 Way string `orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;way&amp;quot;` //生成方式 Time string `orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;time&amp;quot;` //创建时间 Creator string `orm:&amp;quot;NOT NULL&amp;quot; json:&amp;quot;creator&amp;quot;` //制作人 } func main() { fmt.</description>
    </item>
    
  </channel>
</rss>
