<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 行者小筑</title>
    <link>/tags/docker/</link>
    <description>Recent content in Docker on 行者小筑</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@2017-2018 版权所有.</copyright>
    <lastBuildDate>Wed, 19 Apr 2017 15:24:29 +0800</lastBuildDate>
    <atom:link href="/tags/docker/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>【docker】Docker实战 - 将go工程部署到docker</title>
      <link>/post/2017/04/docker-deploy-1/</link>
      <pubDate>Wed, 19 Apr 2017 15:24:29 +0800</pubDate>
      
      <guid>/post/2017/04/docker-deploy-1/</guid>
      <description>###目标功能 + 使用go语言实现基本http服务 访问 localhost:8080 时能够返回 &amp;ldquo;hellodocker&amp;rdquo; + 将工程部署到docker，并在后台启动 ###环境介绍 docker: golang: host(宿主机环境): Mac os 10.12
###重点难点 + dockerfile结构 + docker网络结构
###操作步骤
Go工程 1 在本机新建go工程，目录名为hellodocker
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;net/http&amp;quot; ) func indexHandler(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, &amp;quot;hello docker&amp;quot;) } func main() { http.HandleFunc(&amp;quot;/&amp;quot;, indexHandler) http.ListenAndServe(&amp;quot;:8080&amp;quot;, nil) }  2 编译和执行 3 打开浏览器输入 localhost:8080 当屏幕出现 &amp;ldquo;hellodocker&amp;rdquo;说明程序正常
制作docker镜像 1 在工程目录hellodocker下，新建dockerfile文件
FROM golang:latest MAINTAINER Razil &amp;quot;raymond_2008@yahoo.com&amp;quot; WORKDIR $GOPATH/src/hellodocker ADD .</description>
    </item>
    
  </channel>
</rss>
